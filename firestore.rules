rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own profile, admins can read any
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow listing users only for admins
      allow list: if isAdmin();
      
      // Allow users to create their own profile explicitly
      // This is now supplemented by Admin SDK for admin setup
      allow create: if isOwner(userId);
      
      // Allow users to update their own profile, admins can update any profile
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete user profiles
      allow delete: if isAdmin();
    }

    // Quotes collection rules
    match /quotes/{quoteId} {
      // Anyone can read quotes
      allow read: if true;
      
      // Only admins can write quotes
      allow write: if isAdmin();
    }

    // Pulses collection rules
    match /pulses/{pulseId} {
      // Users can read their own pulses, admins can read any
      allow read: if isOwner(resource.data.userId) || isAdmin();
      
      // Users can create pulses for themselves
      allow create: if isOwner(request.resource.data.userId);
      
      // Users can update their own pulses, admins can update any
      // Ensure userId field cannot be changed during updates
      allow update: if (isOwner(resource.data.userId) && 
                        request.resource.data.userId == resource.data.userId) || 
                       isAdmin();
      
      // Users can delete their own pulses, admins can delete any
      allow delete: if isOwner(resource.data.userId) || isAdmin();

      // Trades subcollection rules
      match /trades/{tradeId} {
        allow read: if isOwner(get(/databases/$(database)/documents/pulses/$(pulseId)).data.userId) || isAdmin();
        allow create, update, delete: if isOwner(get(/databases/$(database)/documents/pulses/$(pulseId)).data.userId) || isAdmin();
      }
    }
  }
} 